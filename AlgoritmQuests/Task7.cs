using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AlgoritmQuests
{
    /* Задача: расположить 8 ферзей на шахматной доске 8х8, так чтобы ни один ферзь не нападал на другого.
     * Исходя из того, что ни один ферзь не должен нападать на другого, иначе говроя фигуры не должны находится на одних и тех же горизонталях,
     * вертикалях и диагоналях. И при этом этоv 8 фигур должны разместиться на доске 8х8, можно воспользоваться, приниципом
     * плотнейшей упаковки (Упаковки плотнейшие — в кристаллографии, формы расположения атомов в кристаллической решётке, 
     * которые характеризуются наибольшим числом атомов в единице объёма кристалла.) , только в вариации для плоскости.
     * В нашем случае это означает, что следующий ферзь от текущего должен распологаться на наименьшем расстоянии от текущего.
     * 01010   0 - запрещенное положение                                        0ф000               00010
     * 10001   1 - возможное положение следующего ферзя                         00001               Ф0000
     * 00Ф00   Ф - положение ферзя                                              00Ф00               00Ф00
     * 10001    ======>один из двух вариантов после расположения следущего Ф => 10000 =>второй =>   00001
     * 01010                                                                    00010   вариант     01000
     * В радиусе двух клеток это 8 положений, ну а после заняти одной из восьми точек (Если их пронумеровать по радиусу от 1 до 8, 
     * то первое положение будет четным или не четным) остаётся 3 разрешенных положения (чётные или не четные). Которые при расположении
     * от края на 2 и более клеток можно сразу заполнить фигурами.
     * При расположении первой фигуре близко к границе шахматной доски, положения выходящие за пределы доски помечаются как невозможные.
     * Далее методом перебора вновь расположенных ферзей заполнить остальную часть доски.
     * 
     * Всоответсии с представленным решением, нужен класс который будет содержать доску и разрешенные,неразрешенные положения
     * для следующей фигуры, положение размещенных фигур.
     * Класс фигуры ферзя содержайщий его координаты??? Возможно не нужен из-за наличия данных в классе доски
     * Класс или массив содержащий 8 возможных относительных положений 
     * Метод отображения доски с фигурами.
     * Метод распологающий произвольным образом первую фигуру.
     * Метод распологающий следующие фигуры относительно первой(других)
     * Метод предлагающий новые координаты для следующей фигуры.
     * Метод проверяющий разрешенность положения новой фигуры.
     * Метод распологающий новую фигуру (ы), 
     * Метод отмечающий запрещенные положения для следующих фигур в классе доски 
     * 
     * Оптимальным решением будет метод рекурсии вызывающий сам себя до размещения 8 ферзей на доске или отсутствия разрешенных 
     * положений.
     */
    class Task7
    {
        public string NameTask { get; set; }
        public string Description { get; set; }

        public void ShowTask()
        {
            Console.WriteLine(NameTask);
            Console.WriteLine(Description);
            Console.WriteLine("Нажмите клавишу Enter для продолжения.");
            Console.ReadLine();
        }

        public void StartTask()
        {
            NameTask = "\nЗадание №1:\n";
            Description = @"Задача: расположить 8 ферзей на шахматной доске 8х8, так чтобы ни один ферзь не нападал на другого.";
            ShowTask();
            TaskLogic();
        }

        public void TaskLogic()
        {
            Chess8Queen chess8Queen = new Chess8Queen();
            chess8Queen.Logic8Queen();
        }
    }
}
